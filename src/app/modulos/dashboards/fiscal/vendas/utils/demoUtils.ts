/**
 * SCRIPT DE INICIALIZA√á√ÉO PARA DEMONSTRA√á√ÉO DO DASHBOARD DE VENDAS
 * 
 * Este arquivo simula um carregamento autom√°tico de dados para demonstra√ß√£o
 */

import { SaidaDataExtendida } from "../types";
import { gerarDadosVendasEstaticos } from "../data/dadosEstaticos";

// Configura√ß√µes para demonstra√ß√£o
export const CONFIGURACAO_DEMO = {
  AUTO_CARREGAR_DADOS: true,
  MOSTRAR_TOOLTIPS_DEMO: true,
  SIMULAR_DELAY_API: 1000, // 1 segundo
  PERIODO_PADRAO_MESES: 3, // √öltimos 3 meses
  MENSAGEM_BOAS_VINDAS: "üéØ Dashboard de Vendas - Demonstra√ß√£o com dados fict√≠cios"
};

// Fun√ß√£o para obter dados de demonstra√ß√£o
export function obterDadosDemo(): SaidaDataExtendida[] {
  console.log("üé¨ Iniciando demonstra√ß√£o do Dashboard de Vendas");
  console.log("üìä Gerando 500 transa√ß√µes de vendas fict√≠cias...");
  
  const dados = gerarDadosVendasEstaticos();
  
  console.log(`‚úÖ ${dados.length} vendas geradas para demonstra√ß√£o`);
  console.log("üìà Incluindo dados de:");
  console.log("   ‚Ä¢ Vendas por estado (27 UFs)");
  console.log("   ‚Ä¢ 15 produtos diferentes");
  console.log("   ‚Ä¢ 20 clientes fict√≠cios");
  console.log("   ‚Ä¢ Per√≠odo: Janeiro a Dezembro 2024");
  console.log("   ‚Ä¢ An√°lise geogr√°fica completa");
  console.log("   ‚Ä¢ Rankings de produtos e clientes");
  console.log("   ‚Ä¢ M√©tricas de sazonalidade");
  
  return dados;
}

// Estat√≠sticas dos dados de demonstra√ß√£o
export function estatisticasDados(dados: SaidaDataExtendida[]) {
  const dadosAtivos = dados.filter(d => d.cancelada === "N");
  
  const estatisticas = {
    totalVendas: dadosAtivos.reduce((acc, d) => acc + (d.valor_total || 0), 0),
    totalTransacoes: dadosAtivos.length,
    ticketMedio: 0,
    clientesUnicos: new Set(dadosAtivos.map(d => d.nome_cliente)).size,
    produtosUnicos: new Set(dadosAtivos.map(d => d.produto_nome)).size,
    estadosAtivos: new Set(dadosAtivos.map(d => d.UF)).size,
    periodoInicio: dadosAtivos.sort((a, b) => a.data.localeCompare(b.data))[0]?.data,
    periodoFim: dadosAtivos.sort((a, b) => b.data.localeCompare(a.data))[0]?.data,
  };
  
  estatisticas.ticketMedio = estatisticas.totalVendas / estatisticas.totalTransacoes;
  
  return estatisticas;
}

// Logs informativos para a demonstra√ß√£o
export function logDemonstracao() {
  console.log("\n" + "=".repeat(60));
  console.log("üöÄ DASHBOARD DE VENDAS - MODO DEMONSTRA√á√ÉO");
  console.log("=".repeat(60));
  console.log("üìä FUNCIONALIDADES DISPON√çVEIS:");
  console.log("   ‚úÖ 10 KPIs especializados de vendas");
  console.log("   ‚úÖ Mapa geogr√°fico interativo (React-Leaflet)");
  console.log("   ‚úÖ Rankings de produtos e clientes");
  console.log("   ‚úÖ An√°lises de concentra√ß√£o (Pareto)");
  console.log("   ‚úÖ M√©tricas de sazonalidade");
  console.log("   ‚úÖ Sistema de filtros avan√ßado");
  console.log("   ‚úÖ Visualiza√ß√µes responsivas");
  console.log("");
  console.log("üéØ INSTRU√á√ïES:");
  console.log("   1. Selecione diferentes KPIs no painel superior");
  console.log("   2. Explore o mapa geogr√°fico com zoom/pan");
  console.log("   3. Altere filtros de per√≠odo e cliente");
  console.log("   4. Analise rankings de produtos/clientes");
  console.log("   5. Verifique m√©tricas avan√ßadas no final");
  console.log("");
  console.log("üìà DADOS:");
  console.log("   ‚Ä¢ 500 transa√ß√µes fict√≠cias");
  console.log("   ‚Ä¢ Per√≠odo: 2024 completo");
  console.log("   ‚Ä¢ 27 estados brasileiros");
  console.log("   ‚Ä¢ 15 produtos diferentes");
  console.log("   ‚Ä¢ 20 clientes diversos");
  console.log("=".repeat(60) + "\n");
}

export default {
  CONFIGURACAO_DEMO,
  obterDadosDemo,
  estatisticasDados,
  logDemonstracao
};
